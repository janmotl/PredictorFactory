<?xml version="1.0" encoding="utf-8" standalone="yes"?>

<pattern>
	<name>Time since</name>
	<description>Time since some date in the past till the time when the prediction is required (defined with @baseDate). 
	
	Because we are guaranteed that there is just one date per the group (cardinality is set to 1), it is wasteful to try
	several aggregates as in "Time aggregate since" pattern.
	
	Note: Cardinality of n is handled in time_aggregate_since.
	
	</description>
	<example>
		Let's imagine we want to predict customer's behaviour and that we have an attribute with the client's birth year.
		We could use direct_field pattern on the attribute. However,
		age is more appropriate as a modeling variable because it is not time dependent. The model will predict the
		behavior of 20-year-old people today, next year, and five years from now, and will always be predicting the
		behavior of incoming 20-year-old people based on the experience data.
	</example>
	<author>Jan Motl</author>
	<date>2015-01-10</date>
	<code>SELECT @base
	           , DATEDIFF(@baseDate, @temporalColumn) AS @columnName
	      FROM @propagatedTable
	</code>
	<cardinality>1</cardinality>
</pattern>