<?xml version="1.0" encoding="utf-8" standalone="yes"?>

<pattern>
	<name>Time aggregate since</name>
	<description>Time since some date in the past till the time when the prediction is required (defined with @baseDate). 
	The selection of the date is driven with aggregate functions like min, max and avg.
	
	Note: Cardinality of one is handled in time_since_direct. 
	
	</description>
	<example>
		Imagine we want to predict customer's behaviour and that we have an attribute with birth year in the database.
		We could directly use this value. But age is more appropriate as a modeling
		variable because it is not time dependent. A model will predict the behavior of 20-year-old people today, next
		year, and five years from now, and will always be predicting the behavior of incoming 20-year-old people without
		model retraining.
	</example>
	<author>Jan Motl</author>
	<date>2015-01-10</date>
	<code>SELECT @base
	           , @aggregateFunction(DATEDIFF(@baseDate, @timeColumn)) AS @columnName
	      FROM @propagatedTable
	      GROUP BY @base
	</code>
	<parameter key="@aggregateFunction" value="min, max, avg, stddev_samp"/>
	<cardinality>n</cardinality>
</pattern>