<?xml version="1.0" encoding="utf-8" standalone="yes"?>

<pattern>
	<name>Time since</name>
	<description>Time since some date in the past till the time when the prediction is required (defined with @baseDate). 
	The selection of the date is driven with aggregate functions like min, max and avg.
	
	Note: Cardinality of one is handled in time_since_direct. 
	
	</description>
	<example>
	Example usage: Consider a column with birth year. Then age is more appropriate as a modeling variable because it is 
	not time dependent. A model will predict the behavior of 20-year-old people today, next year, and five years from 
	now, and will always be predicting the behavior of incoming 20-year-old people based on the experience data. 
	</example>
	<author>Jan Motl</author>
	<date>2015-01-10</date>
	<code>SELECT @baseId
	           , @baseDate
	           , @baseTarget
	           , @aggregateFunction(DATEDIFF(@baseDate, @timeColumn)) AS "@columnName"
	      FROM @propagatedTable
	      GROUP BY @baseId, @baseDate, @baseTarget
	</code>
	<parameter key="@aggregateFunction" value="min, max, avg, stddev_samp"/>
	<cardinality>n</cardinality>
</pattern>