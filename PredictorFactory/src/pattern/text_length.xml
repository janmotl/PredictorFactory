<?xml version="1.0" encoding="utf-8" standalone="yes"?>

<pattern>
	<name>Text length</name>
	<description>Returns number of characters. Sometimes the cardinality of the nominal column is too high to
	process the column with existential quantifier. And the length of the string can bear some information. For 
	example, passengers with a long name were more likely to survive sinking of Titanic than passengers with
	short name because passengers with many names and titles were more likely to travel in higher class and 
	as such had better access to the life boats.   
	
	A more recent example would be a prediction of donations. It was found that people with long "Combined length
	of name Prefix + Suffix" are more likely to donate. 
	See: https://cooldata.wordpress.com/2015/01/07/new-finds-in-old-models/  
	
	Note, that this pattern will fail on non-string nominal columns. Such behavior is normal. 
	</description>
	<author>Jan Motl</author>
	<date>2015-01-25</date>
	<code>SELECT @baseId
	           , @baseDate
	           , @baseTarget
	           , @aggregateFunction(CHAR_LENGTH(@nominalColumn)) AS "@columnName"
	      FROM @propagatedTable
	      GROUP BY @baseId, @baseDate, @baseTarget
	</code>
	<parameter key="@aggregateFunction" value="stddev_samp, avg, min, max"/>
	<cardinality>n</cardinality>
</pattern>