<?xml version="1.0" encoding="utf-8" standalone="yes"?>

<pattern>
	<name>Child snapshot bottom</name>
	<description>
		From the child entity with filter F select k-th bottom record 
		according to the rank order by @numericalColumn
		and from that record take a predefined field @nominalColumn.
		TODO: introduce @anyColumnButTheNum
		
		Original MSSQL implementation using row_number
		
		select Relation.ParentKey
		  , t.Field
		from (select Relation.ParentKey
		  , c.Field
		  , K = row_number() over (
		    partition by Relation.ParentKey
		    order by SortExpression)
		from Relation.Parent p
		  left join Relation.Child c 
		    on Relation.JoinCondition and Filter) t
		where t.K = Rank
		
		is not feasible in mySQL, so I am trying the trick by Mosty Mostacho 
		described in http://stackoverflow.com/questions/1895110/row-number-in-mysql
	</description>
	<author>Filip Trojan</author>
	<date>2015-01-02</date>
	<code>select @baseId, @baseDate, @numericalColumn, @nominalColumn "@columnName"
		from (SELECT distinct t1.@baseId
		  , t1.@baseDate
		  , t1.@numericalColumn
		  , t1.@nominalColumn
		  , count(t2.@baseId)+1 as K
		FROM @inputTable t1
		LEFT JOIN @inputTable t2
		  ON t1.@baseId = t2.@baseId 
		  AND t1.@baseDate = t2.@baseDate 
		  AND t1.@numericalColumn > t2.@numericalColumn
		GROUP BY t1.@baseId
		  , t1.@baseDate
		  , t1.@numericalColumn
		  , t1.@nominalColumn
		) b where k = @bottomRank
		ORDER BY @baseId, @baseDate
	</code>
	<parameter key="@bottomRank" value="1, 2, 3"/>
	<cardinality>n</cardinality>
</pattern>
